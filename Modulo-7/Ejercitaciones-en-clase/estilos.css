.header{
    background-color: hotpink;
    grid-area: header;
}
.nav{
    background-color: bisque;
    grid-area: nav;
}
.article1{
    background-color: rgb(124, 124, 253);
    grid-area: article1;
}
.article2{
    background-color: rgb(206, 255, 157);
    grid-area: article2;
}
.aside{
    background-color: brown;
    grid-area: aside;
}
.footer{
    background-color: rgb(253, 253, 125);
    grid-area: footer;
}

.container{
    /*aplicamos GRID*/
    display: grid;
    /*
    Enumeramos las columnas
    se puede usar fraction 贸 %, px
    fr se cre贸 para ser utilizada en Grid
    */
    grid-template-columns: repeat(5, 2fr); /*esa es la forma corta de hacerlo, primero se
    indican la cantidad de columnas y segundo su ancho, 
    otra forma de hacerlo: grid-template-columns: 150px 150px 250px 150px*/

    /*
    Enumeramos las filas
    se puede usar fraction 贸 %, px
    */
    grid-template-rows: repeat(4, 150px);
    /*especificamos nombres para cada item*/
    grid-template-areas: 
    "nav header header header header"
    "nav article1 article1 article1 aside"
    "nav article2 article2 article2 aside"
    "nav footer footer footer footer"
    ;
    /*especificamos espacios*/
    /*especificamos areas vacias con "empty", hasta 3 y + de 3(.)*/
    row-gap: 15px; 
    column-gap: 15px;
   /* este atributo grid-column-gap qued贸 obsoleto*/
}

/* ---------RESPONSIVE DESIGN----------- */
/*Las media query van al final del codigo*/
/*MOBILE*/
@media (max-width: 768px;) {
    .container{
        height: 100vh;
        grid-template-columns: 100%;
        grid-template-rows: repeat(6, auto);
        grid-template-areas: 
        "nav"
        "header"
        "article1"
        "article2"
        "aside"
        "footer"
        ;
    }
}
/*TABLET*/
@media only screen and (min-width: 401px) and (max-width: 960px){
    .header{
        background-color: palevioletred;
    }
}
/*DESKTOP*/
@media only screen and (min-width: 961px){
    .header{
        background-color: darksalmon;
    }
}